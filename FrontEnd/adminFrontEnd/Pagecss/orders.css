.container {
  /* Reuse the global font if you have one, else fallback: */
  font-family: var(--font, Arial, sans-serif);
  padding: 20px; /* Keeping as is unless you have a padding variable */
  display: flex;
  width: 100vw;
  flex-direction: column; /* Align content vertically */
  align-items: center;    /* Center align items horizontally */
  gap: 20px;             /* Add spacing between sections */
}

/* Use header color for the title text */
.title {
  font-size: 2rem;
  margin-bottom: 20px;
  color: var(--header-color, #000);
}

/* Use 'blue button' or fallback #007bff, and 'button-text' or fallback #fff */
.add-button {
  padding: 10px;
  background-color: var(--blue-button-bg, #007bff);
  color: var(--button-text, #fff);
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

/* Reuse the 'body-overlay' variable for the semi-transparent background */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--body-overlay, rgba(0, 0, 0, 0.5));
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* Ensure it overlays above all content */
}

/* Use container background and container shadow from your existing theme variables */
.modal {
  background-color: var(--container-bg, #fff);
  padding: 20px;
  border-radius: 10px;
  width: 80%;
  max-width: 800px;
  overflow-y: auto;
  max-height: 90vh; /* Ensure modal doesn't overflow the viewport */
  box-shadow: var(--container-shadow, 0px 4px 10px rgba(0, 0, 0, 0.3));
  position: relative; /* for close button positioning, if needed */
}

/* Reuse container shadow or create a fallback for the form-section as well */
.form-section {
  box-shadow: var(--container-shadow, 0px 4px 10px rgba(0, 0, 0, 0.3));
  padding: 10px;
}

.input-container {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 20px;
}

/* For input borders, reuse form-input-border */
.input {
  padding: 8px;
  border-radius: 5px;
  border: 1px solid var(--form-input-border, #ccc);
  font-size: 16px;
  width: 100%;
}

/* Same logic for textarea */
.textarea {
  padding: 8px;
  border-radius: 5px;
  border: 1px solid var(--form-input-border, #ccc);
  font-size: 16px;
  height: 60px;
  width: 100%;
}

.box-container {
  display: flex;
  justify-content: space-between;
  gap: 20px;
}

.box {
  flex: 1;
  border: 1px solid var(--form-input-border, #ccc);
  border-radius: 10px;
  padding: 10px;
  overflow-y: auto;
  max-height: 400px; /* Limit height for scrolling */
  width: 100%; 
  max-width: 800px; 
  box-sizing: border-box;
  margin: 0 auto; /* Center horizontally */
}

/* Could reuse product-list or tile styling from your theme, but leaving intact. */
.product-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 10px;
  padding: 10px;
  width: 100%;
  box-sizing: border-box;
}

/* Using product-card-bg as fallback for background, text color as needed. */
.product-tile {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  border: 1px solid var(--tile-border, #ddd);
  border-radius: 10px;
  padding: 5px;
  background-color: var(--product-card-bg, #f9f9f9);
  box-shadow: var(--container-shadow, 0px 4px 10px rgba(0, 0, 0, 0.3));
  width: 100%;
  max-width: 75px; 
  text-align: center;
  box-sizing: border-box;
}

.product-image {
  width: 100%;
  height: auto;
  max-height: 100px;
  object-fit: contain;
  border-radius: 5px;
}

/* If you want black BG from variables, e.g. var(--navbar-bg) or var(--text-color) with fallback */
.product-tile-label {
  background-color: var(--navbar-bg, black);
  padding: 5px;
  width: 100%;
  color: var(--button-text, white);
}

/* Similarly reuse black BG or fallback */
.product-tile-description {
  background-color: var(--navbar-bg, black);
  padding: 5px;
  width: 100%;
  color: var(--button-text, white);
}

/* For close-button, reusing 'price-color' or 'danger color' if you have one. */
.close-button {
  position: absolute;
  top: 5px;
  right: 5px;
  background-color: var(--price-color, red);
  color: var(--button-text, #fff);
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

/* Use your 'blue button' variable or fallback #007bff again. */
.floating-button {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: var(--blue-button-bg, #007bff);
  color: var(--button-text, #fff);
  border: none;
  cursor: pointer;
  font-size: 1.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  box-shadow: var(--container-shadow, 0px 4px 8px rgba(0, 0, 0, 0.3));
}

.button-container {
  margin-top: 20px;
  display: flex;
  justify-content: space-between;
  width: 100%;
}

/* Reuse 'signup-button-bg' or 'button-bg' if you prefer, fallback #28a745 */
.create-button {
  padding: 10px 20px;
  background-color: var(--signup-button-bg, #28a745);
  color: var(--button-text, #fff);
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.orders-container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

/* Reuse container BG for .order-card or fallback #fff */
.order-card {
  padding: 10px;
  border: 1px solid var(--tile-border, #ddd);
  border-radius: 10px;
  background-color: var(--container-bg, #fff);
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: 100%;
}
